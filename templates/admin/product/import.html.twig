{% extends '@EasyAdmin/layout.html.twig' %}

{% block content_title %}
    <i class="fa fa-upload"></i> Import Products & Variants
{% endblock %}

{% block content_header_wrapper %}
    {{ parent() }}
    <div class="content-header-right">
        <a href="{{ path('product_import_template') }}" class="btn btn-secondary btn-sm">
            <i class="fa fa-download"></i> Download Template
        </a>
    </div>
{% endblock %}

{% block main %}
    <div class="row">
        <div class="col-12">
            <!-- Import Form Card -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="fa fa-upload"></i> Upload File
                    </h3>
                </div>
                <div class="card-body">
                    <!-- Instructions -->
                    <div class="alert alert-info">
                        <h6><i class="fa fa-info-circle"></i> Import Instructions</h6>
                        <ul class="mb-0">
                            <li>Supported formats: <strong>.xlsx, .xls, .csv</strong></li>
                            <li>Products with the same SKU will be grouped together</li>
                            <li>Each row represents one product variant</li>
                            <li>Attributes should be in pairs (attribute_name, attribute_value)</li>
                            <li>Download the template above to see the expected format</li>
                        </ul>
                    </div>

                    <!-- Upload Form -->
                    <form id="importForm" enctype="multipart/form-data">
                        <div class="form-group row">
                            <label for="import_file" class="col-sm-2 col-form-label">Select File</label>
                            <div class="col-sm-8">
                                <div class="custom-file">
                                    <input type="file"
                                           class="custom-file-input"
                                           id="import_file"
                                           name="import_file"
                                           accept=".xlsx,.xls,.csv"
                                           required>
                                    <label class="custom-file-label" for="import_file">Choose file...</label>
                                </div>
                                <small class="form-text text-muted">
                                    Maximum file size: 10MB. Supported formats: Excel (.xlsx, .xls) and CSV (.csv)
                                </small>
                            </div>
                            <div class="col-sm-2">
                                <button type="submit" class="btn btn-primary btn-block" id="importBtn">
                                    <i class="fa fa-upload"></i> Import
                                </button>
                            </div>
                        </div>
                    </form>

                    <!-- Progress Bar -->
                    <div class="progress mt-3" id="progressBar" style="display: none;">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-primary"
                             role="progressbar"
                             style="width: 100%">
                            Processing import...
                        </div>
                    </div>

                    <!-- Results -->
                    <div id="importResults" class="mt-4" style="display: none;"></div>
                </div>
            </div>

            <!-- Format Preview Card -->
            <div class="card mt-4">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="fa fa-table"></i> Expected File Format
                    </h3>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered table-sm table-striped">
                            <thead class="thead-light">
                            <tr>
                                <th>product_name</th>
                                <th>category_name</th>
                                <th>variant_sku</th>
                                <th>variant_name</th>
                                <th>variant_price</th>
                                <th>color_name</th>
                                <th>color_value</th>
                                <th>size_name</th>
                                <th>size_value</th>
                            </tr>
                            </thead>
                            <tbody>
                            <tr>
                                <td>T-Shirt Basic</td>
                                <td>Clothing</td>
                                <td><code>TSHIRT-RED-S</code></td>
                                <td>Red Small T-Shirt</td>
                                <td class="text-right">19.99</td>
                                <td>Color</td>
                                <td>Red</td>
                                <td>Size</td>
                                <td>S</td>
                            </tr>
                            <tr>
                                <td>T-Shirt Basic</td>
                                <td>Clothing</td>
                                <td><code>TSHIRT-RED-M</code></td>
                                <td>Red Medium T-Shirt</td>
                                <td class="text-right">19.99</td>
                                <td>Color</td>
                                <td>Red</td>
                                <td>Size</td>
                                <td>M</td>
                            </tr>
                            <tr>
                                <td>T-Shirt Basic</td>
                                <td>Clothing</td>
                                <td><code>TSHIRT-BLUE-S</code></td>
                                <td>Blue Small T-Shirt</td>
                                <td class="text-right">19.99</td>
                                <td>Color</td>
                                <td>Blue</td>
                                <td>Size</td>
                                <td>S</td>
                            </tr>
                            <tr>
                                <td>Jeans Premium</td>
                                <td>Clothing</td>
                                <td><code>JEANS-32</code></td>
                                <td>Jeans 32 Inch</td>
                                <td class="text-right">59.99</td>
                                <td>Waist</td>
                                <td>32</td>
                                <td class="text-muted">-</td>
                                <td class="text-muted">-</td>
                            </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="alert alert-light">
                        <small>
                            <i class="fa fa-lightbulb text-warning"></i>
                            <strong>Tip:</strong> You can add more attribute pairs (attribute_name, attribute_value) as additional columns.
                            Empty attribute values are ignored.
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('importForm');
            const importBtn = document.getElementById('importBtn');
            const progressBar = document.getElementById('progressBar');
            const resultsDiv = document.getElementById('importResults');
            const fileInput = document.getElementById('import_file');
            const fileLabel = document.querySelector('.custom-file-label');

            // Update file label when file is selected
            fileInput.addEventListener('change', function() {
                const file = this.files[0];
                if (file) {
                    fileLabel.textContent = file.name;

                    // File validation
                    const allowedTypes = ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
                        'application/vnd.ms-excel', 'text/csv'];
                    const maxSize = 10 * 1024 * 1024; // 10MB

                    if (!allowedTypes.includes(file.type) && !file.name.match(/\.(xlsx|xls|csv)$/i)) {
                        showError('Invalid file type. Please select an Excel or CSV file.');
                        this.value = '';
                        fileLabel.textContent = 'Choose file...';
                        return;
                    }

                    if (file.size > maxSize) {
                        showError('File size exceeds 10MB limit.');
                        this.value = '';
                        fileLabel.textContent = 'Choose file...';
                        return;
                    }
                } else {
                    fileLabel.textContent = 'Choose file...';
                }
            });

            form.addEventListener('submit', function(e) {
                e.preventDefault();

                const file = fileInput.files[0];
                if (!file) {
                    showError('Please select a file to import.');
                    return;
                }

                const formData = new FormData();
                formData.append('import_file', file);

                // Show progress
                importBtn.disabled = true;
                importBtn.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Processing...';
                progressBar.style.display = 'block';
                resultsDiv.style.display = 'none';

                fetch('{{ path("product_import_process") }}', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        hideProgress();
                        showResults(data);
                    })
                    .catch(error => {
                        hideProgress();
                        showError('An error occurred during import: ' + error.message);
                    });
            });

            function hideProgress() {
                importBtn.disabled = false;
                importBtn.innerHTML = '<i class="fa fa-upload"></i> Import';
                progressBar.style.display = 'none';
            }

            function showResults(data) {
                let html = '';

                if (data.success) {
                    html = `
                <div class="alert alert-success">
                    <h5 class="alert-heading">
                        <i class="fa fa-check-circle"></i> Import Successful!
                    </h5>
                    <p>${data.message}</p>
                    <hr>
                    <div class="row">
                        <div class="col-md-6">
                            <strong><i class="fa fa-cube"></i> Products Created:</strong>
                            <span class="badge badge-success">${data.details.products_created}</span>
                        </div>
                        <div class="col-md-6">
                            <strong><i class="fa fa-cubes"></i> Variants Created:</strong>
                            <span class="badge badge-info">${data.details.variants_created}</span>
                        </div>
                    </div>
                </div>
            `;

                    // Reset form
                    form.reset();
                    fileLabel.textContent = 'Choose file...';
                } else {
                    html = `
                <div class="alert alert-danger">
                    <h5 class="alert-heading">
                        <i class="fa fa-exclamation-triangle"></i> Import Failed
                    </h5>
                    <p>${data.message}</p>
            `;

                    if (data.errors && data.errors.length > 0) {
                        html += '<hr><strong>Detailed Errors:</strong><ul class="mb-0">';
                        data.errors.forEach(error => {
                            html += `<li><small>${error}</small></li>`;
                        });
                        html += '</ul>';
                    }

                    html += '</div>';
                }

                resultsDiv.innerHTML = html;
                resultsDiv.style.display = 'block';

                // Scroll to results
                resultsDiv.scrollIntoView({ behavior: 'smooth' });
            }

            function showError(message) {
                const html = `
            <div class="alert alert-danger">
                <i class="fa fa-exclamation-triangle"></i> ${message}
            </div>
        `;
                resultsDiv.innerHTML = html;
                resultsDiv.style.display = 'block';
            }

            // Initialize tooltips if Bootstrap is available
            if (typeof $!== 'undefined' && $.fn.tooltip) {
                $('[data-toggle="tooltip"]').tooltip();
            }
        });
    </script>
{% endblock %}
